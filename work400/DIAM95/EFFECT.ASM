Vibrato_Tbl  db   0, 24, 49, 74, 97,120,141,161
             db 180,197,212,224,235,244,250,253
             db 255,253,250,244,235,224,212,197
             db 180,161,141,120, 97, 74, 49, 24


mt_PeriodTable Label Word
; Tuning 0
            dw -1
            dw 3424,3232,3048,2880,2712,2560,2416,2280,2152,2032,1920,1814
            dw 1712,1616,1524,1440,1356,1280,1208,1140,1076,1016,960,907
            dw 856,808,762,720,678,640,604,570,538,508,480,453
            dw 428,404,381,360,339,320,302,285,269,254,240,226
            dw 214,202,190,180,169,160,151,142,134,127,120,113
            dw 107,101,95,90,84,80,75,71,67,63,60,56
            dw 53,50,47,45,42,40,37,35,33,31,30,28,0
; Tuning 1
            dw -1
            dw 3400,3208,3028,2860,2700,2544,2404,2268,2140,2020,1908,1800
            dw 1700,1604,1514,1430,1350,1272,1202,1134,1070,1010,954,900
            dw 850,802,757,715,675,636,601,567,535,505,477,450
            dw 425,401,378,357,337,318,300,283,267,252,238,225
            dw 212,200,189,178,168,159,150,141,133,126,119,112
            dw 106,100,94,89,84,79,75,70,66,63,59,56
            dw 53,50,47,44,42,39,37,35,33,31,29,28,0
; Tuning 2
            dw -1
            dw 3376,3184,3008,2836,2680,2528,2388,2252,2128,2008,1896,1788
            dw 1688,1592,1504,1418,1340,1264,1194,1126,1064,1004,948,894
            dw 844,796,752,709,670,632,597,563,532,502,474,447
            dw 422,398,376,354,335,316,298,281,266,251,237,223
            dw 211,199,188,177,167,158,149,140,133,125,118,111
            dw 105,99,94,88,83,79,74,70,66,62,59,55
            dw 52,49,47,44,41,39,37,35,33,31,29,27,0
; Tuning 3
            dw -1
            dw 3352,3164,2984,2816,2660,2512,2368,2236,2112,1992,1880,1774
            dw 1676,1582,1492,1408,1330,1256,1184,1118,1056,996,940,887
            dw 838,791,746,704,665,628,592,559,528,498,470,443
            dw 419,395,373,352,332,314,296,279,264,249,235,221
            dw 209,197,186,176,166,157,148,139,132,124,117,110
            dw 104,98,93,88,83,78,74,69,66,62,58,55
            dw 52,49,46,44,41,39,37,34,33,31,29,27,0
; Tuning 4
            dw -1
            dw 3328,3140,2964,2796,2640,2492,2352,2220,2096,1976,1868,1762
            dw 1664,1570,1482,1398,1320,1246,1176,1110,1048,988,934,881
            dw 832,785,741,699,660,623,588,555,524,494,467,440
            dw 416,392,370,349,330,311,294,277,262,247,233,220
            dw 208,196,185,174,165,155,147,138,131,123,116,110
            dw 104,98,92,87,82,77,73,69,65,61,58,55
            dw 52,49,46,43,41,38,36,34,32,30,29,27,0

; Tuning 5
            dw -1
            dw 3304,3116,2944,2776,2620,2476,2336,2204,2080,1964,1852,1750
            dw 1652,1558,1472,1388,1310,1238,1168,1102,1040,982,926,875
            dw 826,779,736,694,655,619,584,551,520,491,463,437
            dw 413,389,368,347,327,309,292,275,260,245,231,218
            dw 206,194,184,173,163,154,146,137,130,122,115,109
            dw 103,97,92,86,81,77,73,68,65,61,57,54
            dw 51,48,46,43,40,38,36,34,32,30,28,27,0
; Tuning 6
            dw -1
            dw 3280,3096,2920,2756,2604,2456,2320,2188,2064,1948,1840,1736
            dw 1640,1548,1460,1378,1302,1228,1160,1094,1032,974,920,868
            dw 820,774,730,689,651,614,580,547,516,487,460,434
            dw 410,387,365,344,325,307,290,273,258,243,230,217
            dw 205,193,182,172,162,153,145,136,129,121,115,108
            dw 102,96,91,86,81,76,72,68,64,60,57,54
            dw 51,48,45,43,40,38,36,34,32,30,28,27,0
; Tuning 7
            dw -1
            dw 3256,3072,2900,2736,2584,2440,2300,2172,2052,1936,1828,1724
            dw 1628,1536,1450,1368,1292,1220,1150,1086,1026,968,914,862
            dw 814,768,725,684,646,610,575,543,513,484,457,431
            dw 407,384,362,342,323,305,287,271,256,242,228,215
            dw 203,192,181,171,161,152,143,135,128,121,114,107
            dw 101,96,90,85,80,76,71,67,64,60,57,53
            dw 50,48,45,42,40,38,35,33,32,30,28,26,0
; Tuning -8
            dw -1
            dw 3628,3424,3232,3048,2880,2712,2560,2416,2280,2152,2032,1920
            dw 1814,1712,1616,1524,1440,1356,1280,1208,1140,1076,1016,960
            dw 907,856,808,762,720,678,640,604,570,538,508,480
            dw 453,428,404,381,360,339,320,302,285,269,254,240
            dw 226,214,202,190,180,169,160,151,142,134,127,120
            dw 113,107,101,95,90,84,80,75,71,67,63,60
            dw 56,53,50,47,45,42,40,37,35,33,31,29,0

; Tuning -7
            dw -1
            dw 3600,3400,3208,3028,2860,2700,2544,2404,2268,2140,2020,1908
            dw 1800,1700,1604,1514,1430,1350,1272,1202,1134,1070,1010,954
            dw 900,850,802,757,715,675,636,601,567,535,505,477
            dw 450,425,401,378,357,337,318,300,283,267,252,239
            dw 225,212,200,189,178,168,159,150,141,133,126,119
            dw 112,106,100,94,89,84,79,75,70,66,63,59
            dw 56,53,50,47,44,42,39,37,35,33,31,29,0

; Tuning -6
            dw -1
            dw 3576,3376,3184,3008,2836,2680,2528,2388,2252,2128,2008,1896
            dw 1788,1688,1592,1504,1418,1340,1264,1194,1126,1064,1004,948
            dw 894,844,796,752,709,670,632,597,563,532,502,474
            dw 447,422,398,376,354,335,316,298,281,266,251,237
            dw 223,211,199,188,177,167,158,149,140,133,125,118
            dw 111,105,99,94,88,83,79,74,70,66,62,59
            dw 55,52,49,47,44,41,39,37,35,33,31,29,0

; Tuning -5
            dw -1
            dw 3548,3352,3164,2984,2816,2660,2512,2368,2236,2112,1992,1880
            dw 1774,1676,1582,1492,1408,1330,1256,1184,1118,1056,996,940
            dw 887,838,791,746,704,665,628,592,559,528,498,470
            dw 443,419,395,373,352,332,314,296,279,264,249,235
            dw 221,209,197,186,176,166,157,148,139,132,124,118
            dw 110,104,98,93,88,83,78,74,69,66,62,59
            dw 55,52,49,46,44,41,39,37,34,33,31,29,0

; Tuning -4
            dw -1
            dw 3524,3328,3140,2964,2796,2640,2492,2352,2220,2096,1976,1868
            dw 1762,1664,1570,1482,1398,1320,1246,1176,1110,1048,988,934
            dw 881,832,785,741,699,660,623,588,555,524,494,467
            dw 440,416,392,370,349,330,311,294,277,262,247,233
            dw 220,208,196,185,174,165,155,147,138,131,123,117
            dw 110,104,98,92,87,82,77,73,69,65,61,58
            dw 55,52,49,46,43,41,38,36,34,32,30,28,0

; Tuning -3
            dw -1
            dw 3500,3304,3116,2944,2776,2620,2476,2336,2204,2080,1964,1852
            dw 1750,1652,1558,1472,1388,1310,1238,1168,1102,1040,982,926
            dw 875,826,779,736,694,655,619,584,551,520,491,463
            dw 437,413,389,368,347,327,309,292,275,260,245,232
            dw 218,206,194,184,173,163,154,146,137,130,122,116
            dw 109,103,97,92,86,81,77,73,68,65,61,58
            dw 54,51,48,46,43,40,38,36,34,32,30,28,0

; Tuning -2
            dw -1
            dw 3472,3280,3096,2920,2756,2604,2456,2320,2188,2064,1948,1624
            dw 1736,1640,1548,1460,1378,1302,1228,1160,1094,1032,974,812
            dw 868,820,774,730,689,651,614,580,547,516,487,456
            dw 434,410,387,365,344,325,307,290,273,258,243,228
            dw 217,205,193,182,172,162,153,145,136,129,121,114
            dw 108,102,96,91,86,81,76,72,68,64,60,57
            dw 54,51,48,45,43,40,38,36,34,32,30,28,0
; Tuning -1
            dw -1
            dw 3448,3256,3072,2900,2736,2584,2440,2300,2172,2052,1936,182
            dw 1724,1628,1536,1450,1368,1292,1220,1150,1086,1026,968,914
            dw 862,814,768,725,684,646,610,575,543,513,484,457
            dw 431,407,384,362,342,323,305,287,271,256,242,228
            dw 215,203,192,181,171,161,152,143,135,128,121,114
            dw 107,101,96,90,85,80,76,71,67,64,60,57
            dw 53,50,48,45,42,40,38,35,33,32,30,28,0


calc_freq:
; in : BX = Note
;
; out :
;
;      EAX = Compt_freq
;
;
calc_freq:
            add bx,[edi.MS.FineTune]
            mov bx,[mt_PeriodTable+ebx]
            ret

Search_Freq:
            test ebx,ebx
            je @@Ok3
            push eax
            push ecx
            mov eax,ebx
            xor ebx,ebx
;            movzx ebx,[edi.MS.FineTune]
@@Ok1:
            add ebx,2
            cmp ax,[mt_PeriodTable+ebx]
            jb @@Ok1
;            sub bx,[edi.MS.FineTune]
            pop ecx
            pop eax
@@Ok3:
            ret



;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Empty Effect
;   Enter   :
;            AL = Parameter
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Empty_Effect:
            ret


;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Arpeggio
;   Enter   :
;           EDI = Pointer of current Channel
;            AL = Parameter of Arpeggio
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Arpeggio:
            test al,al
            jne @@Ok0
            mov [edi.MS.Last_Effect],O Empty_Effect
            ret
@@Ok0:
            mov bx,[edi.MS.Frequence]
            mov [edi.MS.Arp],bx
            call Search_Freq
            mov ebp,ebx
            mov edx,eax
            shr edx,4
            and eax,0Fh
            add edx,edx
            add eax,eax
            mov ebx,ebp
            add ebx,edx
            cmp bx,166
            jbe @@Ok1
            mov ebx,166
@@Ok1:
;            mov bx,[Tuning+ebx]
            call calc_freq
            mov [edi.MS.Arp+2],bx
            mov ebx,ebp
            add ebx,eax
            cmp bx,166
            jbe @@Ok2
            mov ebx,166
@@Ok2:
;            mov bx,[Tuning+ebx]
            call calc_freq
            mov [edi.MS.Arp+4],bx
            ret



;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Porta up and down
;   Enter   :
;           EDI = Pointer of current Channel
;            AL = Parameter
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Porta_:
            mov [edi.MS.Porta],ax
	ret



;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Porta To
;   Enter   :
;           EDI = Pointer of current Channel
;            AL = Parameter
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Porta_To_:
            test al,al
            je @@Ok1
            mov [edi.MS.Porta_To],ax
@@Ok1:
            ret


;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Vibrato
;   Enter   :
;           EDI = Pointer of current Channel
;            AL = Parameter
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Vibrato_:
            test al,al
            je @@Ok4
            mov ah,al
            mov cl,[edi.MS.Vibrato]
            mov ch,cl
            and cx,0f00fh
            and ah,0f0h
            je @@Ok2
            mov ch,ah
@@Ok2:
            and al,0fh
            je @@Ok3
            mov cl,al
@@Ok3:
            or cl,ch
            mov [edi.MS.Vibrato],cl
@@Ok4:
            ret

;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Volume Slide
;   Enter   :
;           EDI = Pointer of current Channel
;            AL = Parameter
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Volume_Slide:
            test al,al
            je No_Volume_Slide
Volume_Slide2:
            mov ah,al
            and al,0fh
            and ah,0f0h
            shr ah,4
            mov [edi.MS.Slide_volume],ax            ; Decompser en 2 partie
No_Volume_Slide:
	ret



;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Tremelo
;   Enter   :
;           EDI = Pointer of current Channel
;            AL = Parameter
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Tremelo_:
            test al,al
            je @@Ok4
            mov ah,al
            mov cl,[edi.MS.Tremelo]
            mov ch,cl
            and cx,0f00fh
            and ah,0f0h
            je @@Ok2
            mov ch,ah
@@Ok2:
            and al,0fh
            je @@Ok3
            mov cl,al
@@Ok3:
            or cl,ch
            mov [edi.MS.Tremelo],cl
@@Ok4:
            ret



;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Sample Offset
;   Enter   :
;           EDI = Pointer of current Channel
;            AL = Parameter
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Sample_Offset:
            movzx eax,al
            shl eax,8
            mov ebx,[edi.MS.Current_Sample]
            add eax,[List_Addr_Sample+ebx]
            cmp eax,[List_Lenght_Sample+ebx]
            jbe @@Ok1
            mov eax,[List_Lenght_Sample+ebx]
@@Ok1:
            mov [edi.MS.Current_Position],eax
            mov [edi.MS.New_Sample],On
            ret

;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Position Jump
;   Enter   :
;           EDI = Pointer of current Channel
;            AL = Parameter
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Position_Jump:
            dec eax
            mov [Index_Pattern_Order],eax
            mov [Next_Current_Note],0
            mov [Do_Break],On
	ret

;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Set Panning
;   Enter   :
;           EDI = Pointer of current Channel
;            AL = Parameter
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Set_Panning:
;            mov [edi.MS.Panning],al
            ret


;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Set Volume
;   Enter   :
;           EDI = Pointer of current Channel
;            AL = Parameter
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Set_Volume_Effect:
            cmp al,40h
            jle @@Ok1
            mov al,40h
@@Ok1:
            mov [edi.MS.Sample_Volume],al
            ret

;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Pattern Break
;   Enter   :
;           EDI = Pointer of current Channel
;            AL = Parameter
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Pattern_Break:
            mov cl,al
	and al,0f0h
            and cl,0fh
            shr al,4
	imul ax,10
            add al,cl
            mov [Next_Current_Note],al
            mov [Do_Break],On
	ret

;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Set Speed
;   Enter   :
;           EDI = Pointer of current Channel
;            AL = Parameter
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Set_Speed:
;            ret
            cmp al,1fh
            ja @@Ok1
            mov [Current_Speed],al
            mov [Compt_Speed],al
	ret
@@Ok1:
            mov [Current_BPM],al
            call [esi.Dev_Func.Set_BPM_]
            ret


;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Fine Porta Up
;   Enter   :
;           EDI = Pointer of current Channel
;            AL = Parameter
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Fine_Porta_Up:
            sub [edi.MS.Frequence],ax
            cmp [edi.MS.Frequence],Freq_min
            jnl @@Ok1
            mov [edi.MS.Frequence],Freq_min
@@Ok1:
            mov bx,[edi.MS.Frequence]
            call [esi.Dev_Func.Get_Frequence_]
            mov [edi.MS.Compt_Frequence],eax
	ret

;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Fine Porta Down
;   Enter   :
;           EDI = Pointer of current Channel
;            AL = Parameter
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Fine_Porta_Down:
            add [edi.MS.Frequence],ax
            cmp [edi.MS.Frequence],Freq_max
            jle @@Ok1
            mov [edi.MS.Frequence],Freq_max
@@Ok1:
            mov bx,[edi.MS.Frequence]
            call [esi.Dev_Func.Get_Frequence_]
            mov [edi.MS.Compt_Frequence],eax
	ret

;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Set Fine Tune
;   Enter   :
;           EDI = Pointer of current Channel
;            AL = Parameter
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Set_Fine_Tune:
            shl ax,4+8                      ; Sign FineTune
            sar ax,4+8
            mov [edi.MS.FineTune],ax
            ret



;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Set Jump
;   Enter   :
;           EDI = Pointer of current Channel
;            AL = Parameter
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Set_Jump:
            and al,0fh
            jne @@Ok1
            mov al,[Current_Note]
            mov [edi.MS.Jump_0e6],al
	ret
@@Ok1:
            cmp [edi.MS.Compt_jump_0e6],0
            jne @@Ok2
            mov [edi.MS.Flags_0e6],On
            mov [edi.MS.Compt_jump_0e6],al
	ret
@@Ok2:
            mov [edi.MS.Flags_0e6],On
            dec [edi.MS.Compt_jump_0e6]
	ret


;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Retrig Note
;   Enter   :
;           EDI = Pointer of current Channel
;            AL = Parameter
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Retrig_Note_:
            and al,0fh
            je @@Ok1
            mov [edi.MS.Retrig_Note_Val],al
@@Ok1:
            mov [edi.MS.Retrig_Note],al
            ret


;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Fine Volume Slide Up
;   Enter   :
;           EDI = Pointer of current Channel
;            AL = Parameter
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Fine_Volume_Slide_Up:
            add al,[edi.MS.Sample_Volume]
	cmp al,40h
            jle @@Ok1
	mov al,40h
@@Ok1:
            mov [edi.MS.Sample_Volume],al
            ret



;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Fine Volume Slide Down
;   Enter   :
;           EDI = Pointer of current Channel
;            AL = Parameter
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Fine_Volume_Slide_Down:
            sub [edi.MS.Sample_Volume],al
            jge @@Ok2
            mov [edi.MS.Sample_Volume],0
@@Ok2:
            ret



;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Note Cut
;   Enter   :
;           EDI = Pointer of current Channel
;            AL = Parameter
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Note_Cut:
            inc al
            mov [edi.MS.Cut_Note],al
	ret

;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Pattern Delay
;   Enter   :
;           EDI = Pointer of current Channel
;            AL = Parameter
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Pattern_Delay_:
            and al,0fh
            mov [Pattern_Delay],al
	ret




;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Do Arpeggio
;   Enter   :
;           EDI = Pointer of current Channel
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Do_Arpeggio:
            add [edi.MS.Arp_Counter],2
            cmp [edi.MS.Arp_Counter],6
            jb @@Ok1
            mov [edi.MS.Arp_Counter],0
@@Ok1:
            movzx ebx,[edi.MS.Arp_Counter]
            movzx ebx,[edi.MS.Arp+ebx]
            call [esi.Dev_Func.Get_Frequence_]
            mov [edi.MS.Compt_Frequence],eax
            ret

;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Do Porta Up
;   Enter   :
;           EDI = Pointer of current Channel
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Do_Porta_Up:
            mov bx,[edi.MS.Porta]
            sub [edi.MS.Frequence],bx
            cmp [edi.MS.Frequence],Freq_min
            jnl @@Ok1
            mov [edi.MS.Frequence],Freq_min
@@Ok1:
            mov bx,[edi.MS.Frequence]
            call [esi.Dev_Func.Get_Frequence_]
            mov [edi.MS.Compt_Frequence],eax
            ret



;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Do Porta Down
;   Enter   :
;           EDI = Pointer of current Channel
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Do_Porta_Down:
            mov bx,[edi.MS.Porta]
            add [edi.MS.Frequence],bx
            cmp [edi.MS.Frequence],Freq_max
            jle @@Ok1
            mov [edi.MS.Frequence],Freq_max
@@Ok1:
            mov bx,[edi.MS.Frequence]
            call [esi.Dev_Func.Get_Frequence_]
            mov [edi.MS.Compt_Frequence],eax
            ret



;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Do Porta To
;   Enter   :
;           EDI = Pointer of current Channel
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Do_Porta_To:
            movzx edx,[edi.MS.Porta_Freq]      ; Freq que l'on veut
            test edx,edx
            je @@Ok10
            movzx eax,[edi.MS.Porta_To]
            movzx ebx,[edi.MS.Frequence]
            cmp ebx,edx
            jae @@Ok2
            add ebx,eax
            cmp ebx,edx
            jna @@Ok2
            mov ebx,edx
            jmp @@Ok4
@@Ok2:
            cmp ebx,edx
            jbe @@Ok4
            sub ebx,eax
            jnc @@Ok3
            mov ebx,edx
@@Ok3:
            cmp ebx,edx
            jnb @@Ok4
            mov ebx,edx
@@Ok4:
            mov [edi.MS.Frequence],bx
            call [esi.Dev_Func.Get_Frequence_]
            mov [edi.MS.Compt_Frequence],eax
@@Ok10:
            ret


;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Do Vibrato
;   Enter   :
;           EDI = Pointer of current Channel
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Do_Vibrato:
            xor ebx,ebx
            mov dl,[edi.MS.Vibrato]
	mov ah,dl
	and ah,0f0h
            je @@Ok4
            shr ah,4+2
	and dl,0fh
            je @@Ok4
            and ah,3ch
            mov bl,[edi.MS.Vibrato_Pos]
            add [edi.MS.Vibrato_Pos],ah
            shr bl,2
            and bl,1fh
            mov al,[Vibrato_Tbl+ebx]
	mul dl
            shr ax,7
            test [edi.MS.Vibrato_Pos],80h
            je @@Ok1
	neg ax
@@Ok1:
            add ax,[edi.MS.Frequence]
            cmp ax,Freq_max
            jbe @@Ok2
            mov ax,Freq_max
@@Ok2:
            cmp ax,Freq_min
            jnb @@Ok3
            mov ax,Freq_min
@@Ok3:
            mov bx,ax
            call [esi.Dev_Func.Get_Frequence_]
            mov [edi.MS.Compt_Frequence],eax
@@Ok4:
            ret

;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Do Porta To  & volume slide
;   Enter   :
;           EDI = Pointer of current Channel
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Do_Porta_To_Volume_Slide:
            call Do_Volume_Slide
            jmp Do_Porta_To


;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Do Vibrato  & volume slide
;   Enter   :
;           EDI = Pointer of current Channel
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Do_Vibrato_Volume_Slide:
            call Do_Volume_Slide
            jmp Do_Vibrato


;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Do Tremelo
;   Enter   :
;           EDI = Pointer of current Channel
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Do_Tremelo:
            mov dl,[edi.MS.Tremelo]
	mov ah,dl
	and ah,0f0h
	shr ah,2
	and dl,0fh
            mov bl,[edi.MS.Vibrato_Pos]
	add bl,ah
            mov [edi.MS.Vibrato_Pos],bl
	shr bl,1
            and ebx,3fh
            mov al,[Vibrato_Tbl+ebx]
	mul dl
            sar ax,2
            mov al,ah
            test [edi.MS.Vibrato_Pos],80h
            jne @@Ok1
            neg al
@@Ok1:
            add al,[edi.MS.Sample_Volume]
            jge @@Ok2
            xor al,al
@@Ok2:
            cmp al,40h
            jle @@Ok3
            mov al,40h
@@Ok3:
            mov [edi.MS.Sample_Volume],al
            ret

;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Do Volume Slide
;   Enter   :
;           EDI = Pointer of current Channel
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Do_Volume_Slide:
            mov al,[edi.MS.Sample_Volume]
            mov cx,[edi.MS.Slide_volume]
	sub al,cl
            jge @@Ok1
            xor al,al
@@Ok1:
	add al,ch
	cmp al,40h
            jle @@Ok2
	mov al,40h
@@Ok2:
            mov [edi.MS.Sample_Volume],al
            ret



;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Do Retrig Note
;   Enter   :
;           EDI = Pointer of current Channel
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Do_Retrig_Note:
            cmp [edi.MS.Retrig_Note],0
            je @@Ok1
            dec [edi.MS.Retrig_Note]
            jne @@Ok1
            mov ebx,[edi.MS.Current_Sample]
            mov eax,[List_Addr_Sample+ebx]
            mov [edi.MS.Current_Position],eax
            mov [edi.MS.New_Sample],On
            mov al,[edi.MS.Retrig_Note_Val]
            mov [edi.MS.Retrig_Note],al
@@Ok1:
            ret


;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Do Note Cut
;   Enter   :
;           EDI = Pointer of current Channel
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Do_Note_Cut:
            dec [edi.MS.Cut_Note]
            jne @@Ok1
            mov [edi.MS.Sample_Volume],0
            mov [edi.MS.Last_Effect],O Empty_Effect
@@Ok1:
	ret

;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
;Do Delay Note
;   Enter   :
;           EDI = Pointer of current Channel
;
;   Return  :
;
;컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴컴
Do_Delay_Note:
            dec [edi.MS.Delay_Note]
            jne @@Ok1
            call [edi.MS.Addr_Read_Again]
            mov [edi.MS.Last_Effect],O Empty_Effect
@@Ok1:
            ret